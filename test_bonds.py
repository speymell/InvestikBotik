#!/usr/bin/env python3
"""
–°–∫—Ä–∏–ø—Ç –¥–ª—è —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—è —Ñ—É–Ω–∫—Ü–∏–æ–Ω–∞–ª—å–Ω–æ—Å—Ç–∏ –æ–±–ª–∏–≥–∞—Ü–∏–π
"""

import requests
import json
import sys
from datetime import datetime

def test_endpoint(url, description):
    """–¢–µ—Å—Ç–∏—Ä—É–µ—Ç –∫–æ–Ω–∫—Ä–µ—Ç–Ω—ã–π endpoint"""
    print(f"\nüîç –¢–µ—Å—Ç–∏—Ä—É–µ–º: {description}")
    print(f"URL: {url}")
    
    try:
        response = requests.get(url, timeout=30)
        print(f"–°—Ç–∞—Ç—É—Å: {response.status_code}")
        
        if response.status_code == 200:
            try:
                data = response.json()
                if data.get('status') == 'success':
                    print(f"‚úÖ –£—Å–ø–µ—à–Ω–æ: {data.get('message', 'OK')}")
                    return True
                else:
                    print(f"‚ùå –û—à–∏–±–∫–∞: {data.get('message', '–ù–µ–∏–∑–≤–µ—Å—Ç–Ω–∞—è –æ—à–∏–±–∫–∞')}")
                    return False
            except json.JSONDecodeError:
                print("‚úÖ –£—Å–ø–µ—à–Ω–æ: HTML —Å—Ç—Ä–∞–Ω–∏—Ü–∞ –∑–∞–≥—Ä—É–∂–µ–Ω–∞")
                return True
        else:
            print(f"‚ùå HTTP –æ—à–∏–±–∫–∞: {response.status_code}")
            return False
            
    except requests.exceptions.RequestException as e:
        print(f"‚ùå –û—à–∏–±–∫–∞ —Å–æ–µ–¥–∏–Ω–µ–Ω–∏—è: {e}")
        return False

def main():
    """–û—Å–Ω–æ–≤–Ω–∞—è —Ñ—É–Ω–∫—Ü–∏—è —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—è"""
    print("üöÄ –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ —Ñ—É–Ω–∫—Ü–∏–æ–Ω–∞–ª—å–Ω–æ—Å—Ç–∏ –æ–±–ª–∏–≥–∞—Ü–∏–π InvestBot")
    print(f"–í—Ä–µ–º—è: {datetime.now().strftime('%Y-%m-%d %H:%M:%S')}")
    print("=" * 60)
    
    # –ë–∞–∑–æ–≤—ã–π URL (–∏–∑–º–µ–Ω–∏—Ç–µ –Ω–∞ –≤–∞—à)
    base_url = "http://localhost:5000"  # –∏–ª–∏ –≤–∞—à URL
    
    # –°–ø–∏—Å–æ–∫ —Ç–µ—Å—Ç–æ–≤
    tests = [
        (f"{base_url}/health", "Health check"),
        (f"{base_url}/admin/test-bonds", "–¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ API –æ–±–ª–∏–≥–∞—Ü–∏–π"),
        (f"{base_url}/admin/sync-bonds", "–°–∏–Ω—Ö—Ä–æ–Ω–∏–∑–∞—Ü–∏—è –æ–±–ª–∏–≥–∞—Ü–∏–π"),
        (f"{base_url}/stocks?type=bond", "–°—Ç—Ä–∞–Ω–∏—Ü–∞ –æ–±–ª–∏–≥–∞—Ü–∏–π"),
        (f"{base_url}/stocks?type=share", "–°—Ç—Ä–∞–Ω–∏—Ü–∞ –∞–∫—Ü–∏–π"),
        (f"{base_url}/admin", "–ê–¥–º–∏–Ω-–ø–∞–Ω–µ–ª—å"),
        (f"{base_url}/portfolio-analysis", "–ê–Ω–∞–ª–∏–∑ –ø–æ—Ä—Ç—Ñ–µ–ª—è"),
    ]
    
    # –í—ã–ø–æ–ª–Ω—è–µ–º —Ç–µ—Å—Ç—ã
    results = []
    for url, description in tests:
        success = test_endpoint(url, description)
        results.append((description, success))
    
    # –ò—Ç–æ–≥–∏
    print("\n" + "=" * 60)
    print("üìä –†–ï–ó–£–õ–¨–¢–ê–¢–´ –¢–ï–°–¢–ò–†–û–í–ê–ù–ò–Ø")
    print("=" * 60)
    
    passed = 0
    total = len(results)
    
    for description, success in results:
        status = "‚úÖ –ü–†–û–®–ï–õ" if success else "‚ùå –ü–†–û–í–ê–õ–ï–ù"
        print(f"{status:<12} {description}")
        if success:
            passed += 1
    
    print(f"\n–ò—Ç–æ–≥–æ: {passed}/{total} —Ç–µ—Å—Ç–æ–≤ –ø—Ä–æ—à–ª–∏ —É—Å–ø–µ—à–Ω–æ")
    
    if passed == total:
        print("üéâ –í—Å–µ —Ç–µ—Å—Ç—ã –ø—Ä–æ—à–ª–∏ —É—Å–ø–µ—à–Ω–æ! –°–∏—Å—Ç–µ–º–∞ –≥–æ—Ç–æ–≤–∞ –∫ —Ä–∞–±–æ—Ç–µ.")
        return 0
    else:
        print("‚ö†Ô∏è  –ù–µ–∫–æ—Ç–æ—Ä—ã–µ —Ç–µ—Å—Ç—ã –ø—Ä–æ–≤–∞–ª–µ–Ω—ã. –ü—Ä–æ–≤–µ—Ä—å—Ç–µ –Ω–∞—Å—Ç—Ä–æ–π–∫–∏.")
        return 1

if __name__ == "__main__":
    sys.exit(main())
