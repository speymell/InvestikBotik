#!/usr/bin/env python3
"""
–°–∫—Ä–∏–ø—Ç –¥–ª—è —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—è API InvestBot
–ó–∞–ø—É—Å—Ç–∏—Ç–µ –ø–æ—Å–ª–µ –¥–µ–ø–ª–æ—è –¥–ª—è –ø—Ä–æ–≤–µ—Ä–∫–∏ —Ä–∞–±–æ—Ç–æ—Å–ø–æ—Å–æ–±–Ω–æ—Å—Ç–∏
"""

import requests
import json

# –ó–∞–º–µ–Ω–∏—Ç–µ –Ω–∞ –≤–∞—à URL
BASE_URL = "http://localhost:5000"  # –î–ª—è –ª–æ–∫–∞–ª—å–Ω–æ–≥–æ —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—è
# BASE_URL = "https://your-app-name.onrender.com"  # –î–ª—è –ø—Ä–æ–¥–∞–∫—à–µ–Ω–∞

# –ê–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏ –æ–ø—Ä–µ–¥–µ–ª—è–µ–º URL –µ—Å–ª–∏ –∑–∞–ø—É—â–µ–Ω–æ –Ω–∞ Render
import os
if os.environ.get('RENDER'):
    BASE_URL = f"https://{os.environ.get('RENDER_SERVICE_NAME', 'localhost')}.onrender.com"

def test_health():
    """–¢–µ—Å—Ç health check"""
    try:
        response = requests.get(f"{BASE_URL}/health")
        print(f"‚úÖ Health check: {response.status_code}")
        print(f"   Response: {response.json()}")
        return True
    except Exception as e:
        print(f"‚ùå Health check failed: {e}")
        return False

def test_sync_stocks():
    """–¢–µ—Å—Ç —Å–∏–Ω—Ö—Ä–æ–Ω–∏–∑–∞—Ü–∏–∏ –∞–∫—Ü–∏–π"""
    try:
        response = requests.get(f"{BASE_URL}/admin/sync-stocks")
        print(f"‚úÖ Sync stocks: {response.status_code}")
        data = response.json()
        print(f"   Status: {data.get('status')}")
        print(f"   Message: {data.get('message')}")
        return True
    except Exception as e:
        print(f"‚ùå Sync stocks failed: {e}")
        return False

def test_update_prices():
    """–¢–µ—Å—Ç –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è —Ü–µ–Ω"""
    try:
        response = requests.get(f"{BASE_URL}/admin/update-prices")
        print(f"‚úÖ Update prices: {response.status_code}")
        data = response.json()
        print(f"   Status: {data.get('status')}")
        print(f"   Message: {data.get('message')}")
        return True
    except Exception as e:
        print(f"‚ùå Update prices failed: {e}")
        return False

def test_stock_price():
    """–¢–µ—Å—Ç –ø–æ–ª—É—á–µ–Ω–∏—è —Ü–µ–Ω—ã –∞–∫—Ü–∏–∏"""
    try:
        ticker = "SBER"  # –¢–µ—Å—Ç–∏—Ä—É–µ–º –Ω–∞ –°–±–µ—Ä–±–∞–Ω–∫–µ
        response = requests.get(f"{BASE_URL}/api/stock_price/{ticker}")
        print(f"‚úÖ Stock price for {ticker}: {response.status_code}")
        if response.status_code == 200:
            data = response.json()
            print(f"   Price: {data.get('price')} ‚ÇΩ")
        return True
    except Exception as e:
        print(f"‚ùå Stock price test failed: {e}")
        return False

def test_login_page():
    """–¢–µ—Å—Ç —Å—Ç—Ä–∞–Ω–∏—Ü—ã –≤—Ö–æ–¥–∞"""
    try:
        response = requests.get(f"{BASE_URL}/login")
        print(f"‚úÖ Login page: {response.status_code}")
        if response.status_code == 200:
            print("   Login page loaded successfully")
        return True
    except Exception as e:
        print(f"‚ùå Login page test failed: {e}")
        return False

def test_demo_login():
    """–¢–µ—Å—Ç –¥–µ–º–æ –≤—Ö–æ–¥–∞"""
    try:
        response = requests.get(f"{BASE_URL}/demo_login")
        print(f"‚úÖ Demo login: {response.status_code}")
        if response.status_code == 302:  # Redirect to dashboard
            print("   Demo login successful (redirected)")
        return True
    except Exception as e:
        print(f"‚ùå Demo login test failed: {e}")
        return False

def test_stocks_with_logos():
    """–¢–µ—Å—Ç –∑–∞–≥—Ä—É–∑–∫–∏ –∞–∫—Ü–∏–π —Å –ª–æ–≥–æ—Ç–∏–ø–∞–º–∏"""
    try:
        # –°–Ω–∞—á–∞–ª–∞ —Å–∏–Ω—Ö—Ä–æ–Ω–∏–∑–∏—Ä—É–µ–º –∞–∫—Ü–∏–∏
        sync_response = requests.get(f"{BASE_URL}/admin/sync-stocks")
        if sync_response.status_code == 200:
            print("‚úÖ Stocks synced successfully")
        
        # –ü—Ä–æ–≤–µ—Ä—è–µ–º, —á—Ç–æ –∞–∫—Ü–∏–∏ –∑–∞–≥—Ä—É–∑–∏–ª–∏—Å—å —Å –ª–æ–≥–æ—Ç–∏–ø–∞–º–∏
        # –≠—Ç–æ –º–æ–∂–Ω–æ —Å–¥–µ–ª–∞—Ç—å —á–µ—Ä–µ–∑ API –∏–ª–∏ –ø—Ä–æ–≤–µ—Ä–∏–≤ —Å—Ç—Ä–∞–Ω–∏—Ü—É –∞–∫—Ü–∏–π
        stocks_response = requests.get(f"{BASE_URL}/stocks")
        print(f"‚úÖ Stocks page: {stocks_response.status_code}")
        
        if stocks_response.status_code == 200:
            # –ü—Ä–æ–≤–µ—Ä—è–µ–º, —á—Ç–æ –≤ HTML –µ—Å—Ç—å —Å—Å—ã–ª–∫–∏ –Ω–∞ UI Avatars –∏–ª–∏ –¥—Ä—É–≥–∏–µ –ª–æ–≥–æ—Ç–∏–ø—ã
            content = stocks_response.text
            if "ui-avatars.com" in content or "logo" in content.lower():
                print("   –õ–æ–≥–æ—Ç–∏–ø—ã –∞–∫—Ü–∏–π –∑–∞–≥—Ä—É–∂–∞—é—Ç—Å—è –∫–æ—Ä—Ä–µ–∫—Ç–Ω–æ")
            else:
                print("   ‚ö†Ô∏è  –õ–æ–≥–æ—Ç–∏–ø—ã –º–æ–≥—É—Ç –Ω–µ –æ—Ç–æ–±—Ä–∞–∂–∞—Ç—å—Å—è")
        
        return True
    except Exception as e:
        print(f"‚ùå Stocks with logos test failed: {e}")
        return False

def main():
    """–ó–∞–ø—É—Å–∫ –≤—Å–µ—Ö —Ç–µ—Å—Ç–æ–≤"""
    print("üöÄ –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ InvestBot API")
    print("=" * 50)
    
    tests = [
        ("Health Check", test_health),
        ("Login Page", test_login_page),
        ("Demo Login", test_demo_login),
        ("Sync Stocks", test_sync_stocks),
        ("Stocks with Logos", test_stocks_with_logos),
        ("Update Prices", test_update_prices),
        ("Stock Price", test_stock_price),
    ]
    
    passed = 0
    total = len(tests)
    
    for test_name, test_func in tests:
        print(f"\nüìã –¢–µ—Å—Ç: {test_name}")
        try:
            if test_func():
                passed += 1
        except Exception as e:
            print(f"‚ùå –û—à–∏–±–∫–∞ –≤ —Ç–µ—Å—Ç–µ {test_name}: {e}")
    
    print("\n" + "=" * 50)
    print(f"üìä –†–µ–∑—É–ª—å—Ç–∞—Ç—ã: {passed}/{total} —Ç–µ—Å—Ç–æ–≤ –ø—Ä–æ—à–ª–∏ —É—Å–ø–µ—à–Ω–æ")
    
    if passed == total:
        print("üéâ –í—Å–µ —Ç–µ—Å—Ç—ã –ø—Ä–æ—à–ª–∏ —É—Å–ø–µ—à–Ω–æ!")
        print("\nüìù –°–ª–µ–¥—É—é—â–∏–µ —à–∞–≥–∏:")
        print("1. –ù–∞—Å—Ç—Ä–æ–π—Ç–µ Telegram –±–æ—Ç–∞ (—Å–º. SETUP_INSTRUCTIONS.md)")
        print("2. –ü—Ä–æ—Ç–µ—Å—Ç–∏—Ä—É–π—Ç–µ –∞–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏—é —á–µ—Ä–µ–∑ Telegram")
        print("3. –ü—Ä–æ–≤–µ—Ä—å—Ç–µ —Ñ—É–Ω–∫—Ü–∏–æ–Ω–∞–ª —Ç–æ—Ä–≥–æ–≤–ª–∏ –≤ –¥–µ–º–æ-—Ä–µ–∂–∏–º–µ")
    else:
        print("‚ö†Ô∏è  –ù–µ–∫–æ—Ç–æ—Ä—ã–µ —Ç–µ—Å—Ç—ã –Ω–µ –ø—Ä–æ—à–ª–∏. –ü—Ä–æ–≤–µ—Ä—å—Ç–µ –Ω–∞—Å—Ç—Ä–æ–π–∫–∏.")

if __name__ == "__main__":
    main()
