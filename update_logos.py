#!/usr/bin/env python3
"""
–°–∫—Ä–∏–ø—Ç –¥–ª—è –ø—Ä–∏–Ω—É–¥–∏—Ç–µ–ª—å–Ω–æ–≥–æ –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è –ª–æ–≥–æ—Ç–∏–ø–æ–≤ –≤—Å–µ—Ö –∞–∫—Ü–∏–π –≤ –±–∞–∑–µ –¥–∞–Ω–Ω—ã—Ö
"""

from app import app, db
from database import Stock
from stock_api import stock_api_service
import logging

logging.basicConfig(level=logging.INFO)
logger = logging.getLogger(__name__)

def update_all_logos():
    """–û–±–Ω–æ–≤–ª—è–µ—Ç –ª–æ–≥–æ—Ç–∏–ø—ã –¥–ª—è –≤—Å–µ—Ö –∞–∫—Ü–∏–π –≤ –±–∞–∑–µ –¥–∞–Ω–Ω—ã—Ö"""
    with app.app_context():
        stocks = Stock.query.all()
        updated_count = 0
        
        logger.info(f"–ù–∞–π–¥–µ–Ω–æ {len(stocks)} –∞–∫—Ü–∏–π –¥–ª—è –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è –ª–æ–≥–æ—Ç–∏–ø–æ–≤")
        
        for stock in stocks:
            try:
                # –ì–µ–Ω–µ—Ä–∏—Ä—É–µ–º –Ω–æ–≤—ã–π URL –ª–æ–≥–æ—Ç–∏–ø–∞
                new_logo_url = stock_api_service._get_logo_url(stock.ticker)
                
                if new_logo_url:
                    stock.logo_url = new_logo_url
                    updated_count += 1
                    logger.info(f"‚úÖ {stock.ticker}: {new_logo_url}")
                else:
                    logger.warning(f"‚ö†Ô∏è {stock.ticker}: –Ω–µ —É–¥–∞–ª–æ—Å—å —Å–≥–µ–Ω–µ—Ä–∏—Ä–æ–≤–∞—Ç—å –ª–æ–≥–æ—Ç–∏–ø")
                    
            except Exception as e:
                logger.error(f"‚ùå –û—à–∏–±–∫–∞ –¥–ª—è {stock.ticker}: {e}")
                continue
        
        # –°–æ—Ö—Ä–∞–Ω—è–µ–º –∏–∑–º–µ–Ω–µ–Ω–∏—è
        db.session.commit()
        logger.info(f"\n‚ú® –û–±–Ω–æ–≤–ª–µ–Ω–æ {updated_count} –∏–∑ {len(stocks)} –ª–æ–≥–æ—Ç–∏–ø–æ–≤")
        logger.info("üéâ –í—Å–µ –ª–æ–≥–æ—Ç–∏–ø—ã —É—Å–ø–µ—à–Ω–æ –æ–±–Ω–æ–≤–ª–µ–Ω—ã –≤ –±–∞–∑–µ –¥–∞–Ω–Ω—ã—Ö!")
        
        return updated_count

if __name__ == '__main__':
    logger.info("üöÄ –ó–∞–ø—É—Å–∫ –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è –ª–æ–≥–æ—Ç–∏–ø–æ–≤ –∞–∫—Ü–∏–π...")
    count = update_all_logos()
    logger.info(f"‚úÖ –ì–æ—Ç–æ–≤–æ! –û–±–Ω–æ–≤–ª–µ–Ω–æ {count} –ª–æ–≥–æ—Ç–∏–ø–æ–≤")
